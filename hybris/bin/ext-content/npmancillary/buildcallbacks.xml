<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
 [y] hybris Platform

 Copyright (c) 2000-2013 hybris AG
 All rights reserved.

 This software is the confidential and proprietary information of hybris
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with hybris.

  
-->
<project name="npmancillary_buildcallbacks">

    <patternset id="extension.npmancillary.binary.filter">
        <patternset refid="extension.binary.filter"/>
        <exclude name="**/node_modules/protractor/selenium/"/>
        <exclude name="**/node_modules/karma-phantomjs-launcher/node_modules/phantomjs/lib/phantom/bin/"/>
    </patternset>

    <patternset id="extension.npmancillary.source.filter">
        <patternset refid="extension.source.filter"/>
        <exclude name="**/node_modules/protractor/selenium/"/>
        <exclude name="**/node_modules/karma-phantomjs-launcher/node_modules/phantomjs/lib/phantom/bin/"/>
    </patternset>

    <macrodef name="detectOS">
        <sequential>
            <if>
                <os family="windows"/>
                <then>
                    <property name="os.family" value="windows"/>
                </then>

                <elseif>
                    <os family="mac"/>
                    <then>
                        <property name="os.family" value="darwin"/>
                    </then>
                </elseif>

                <else>
                    <property name="os.family" value="linux"/>
                </else>
            </if>
        </sequential>
    </macrodef>

    <macrodef name="removeLink">
        <attribute name="path" default="NOT SET" />

        <sequential>
            <sequential>
                <if>
                    <available file="@{path}" type="dir" />
                    <then>
                        <echo message="Removing link @{path}"/>
                        <if>
                            <os family="windows" />
                            <then>
                                <exec executable="cmd" failonerror="false">
                                    <arg value="/c"/>
                                    <arg value="rmdir"/>
                                    <arg value="@{path}"/>
                                </exec>
                            </then>
                            <else>
                                <exec executable="rm">
                                    <arg line="-rf @{path}"/>
                                </exec>
                            </else>
                        </if>
                    </then>
                </if>
            </sequential>
        </sequential>
    </macrodef>

    <macrodef name="createLink">
        <attribute name="link" default="NOT SET"/>
        <attribute name="path" default="NOT SET"/>

        <sequential>
            <echo message="Creating a link to @{path} in @{link}"/>
            <if>
                <os family="windows" />
                <then>
                    <exec executable="cmd" failonerror="false">
                        <arg value="/c"/>
                        <arg value="mklink"/>
                        <arg value="/D"/>
                        <arg value="/J"/>
                        <arg value="@{link}"/>
                        <arg value="@{path}"/>
                    </exec>
                </then>
                <else>
                    <exec executable="ln">
                        <arg line="-sf @{path} @{link}"/>
                    </exec>
                </else>
            </if>
        </sequential>
    </macrodef>

    <macrodef name="cleanGruntBuildSymlinks">
        <sequential>
            <if>
                <not>
                    <isset property="gruntBuildSymlinksCleaned"/>
                </not>
                <then>
                    <if>
                        <isset property="ext.npmtestancillary.path"/>
                        <then>
                            <echo message="Extension npmtestancillary found in localextensions.xml"/>
                            <removeLink path="${loc.PHANTOM_JS_DIR_LINK}" />
                            <removeLink path="${loc.SELENIUM_DIR_LINK}" />
                            <removeLink path="${loc.CHROME_DRIVER_DIR_LINK}" />

                            <createLink link="${loc.PHANTOM_JS_DIR_LINK}" path="${loc.PHANTOM_JS_DIR}" />
                            <createLink link="${loc.SELENIUM_DIR_LINK}" path="${loc.SELENIUM_DIR}" />
                            <createLink link="${loc.CHROME_DRIVER_DIR_LINK}" path="${loc.CHROME_DRIVER_DIR}" />
                        </then>
                    </if>
                    <property name="gruntBuildSymlinksCleaned" value="true"/>
                </then>
            </if>
        </sequential>
    </macrodef>

    <macrodef name="createNodeModulesSymlink">
        <attribute name="path" default="NOT SET" />
        <sequential>
            <if>
                <not>
                    <available file="@{path}${file.separator}node_modules" type="dir" />
                </not>
                <then>
                    <createLink link="@{path}${file.separator}node_modules" path="${loc.NPM_BINARIES_HOME}" />
                </then>
            </if>
        </sequential>
    </macrodef>

    <macrodef name="resetNpmPermissions">
        <sequential>
            <if>
                <and>
                    <not>
                        <isset property="npmPermissionsReset"/>
                    </not>
                    <or>
                        <os family="mac" />
                        <os family="unix" />
                    </or>
                </and>
                <then>
                    <echo message="Restoring NPM permissions and sym links lost in packaging process"/>
                    <exec executable="rm">
                        <arg line="-rf ${loc.NPM_BINARIES_HOME}/.bin/bower"/>
                    </exec>
                    <exec executable="rm">
                        <arg line="-rf ${loc.NPM_BINARIES_HOME}/.bin/grunt"/>
                    </exec>
                    <exec executable="rm">
                        <arg line="-rf ${loc.NPM_BINARIES_HOME}/.bin/grunt-jssemicoloned"/>
                    </exec>
                    <exec executable="rm">
                        <arg line="-rf ${loc.NPM_BINARIES_HOME}/.bin/protractor"/>
                    </exec>
                    <exec executable="rm">
                        <arg line="-rf ${loc.NPM_BINARIES_HOME}/.bin/webdriver-manager"/>
                    </exec>
                    <exec executable="ln">
                        <arg line="-sf ${loc.NPM_BINARIES_HOME}/bower/bin/bower ${loc.NPM_BINARIES_HOME}/.bin/bower"/>
                    </exec>
                    <exec executable="ln">
                        <arg line="-sf ${loc.NPM_BINARIES_HOME}/grunt-cli/bin/grunt ${loc.NPM_BINARIES_HOME}/.bin/grunt"/>
                    </exec>
                    <exec executable="ln">
                        <arg line="-sf ${loc.NPM_BINARIES_HOME}/grunt-jssemicoloned/bin/grunt-jssemicoloned ${loc.NPM_BINARIES_HOME}/.bin/grunt-jssemicoloned"/>
                    </exec>
                    <exec executable="ln">
                        <arg line="-sf ${loc.NPM_BINARIES_HOME}/protractor/bin/protractor ${loc.NPM_BINARIES_HOME}/.bin/protractor"/>
                    </exec>
                    <exec executable="ln">
                        <arg line="-sf ${loc.NPM_BINARIES_HOME}/protractor/bin/webdriver-manager ${loc.NPM_BINARIES_HOME}/.bin/webdriver-manager"/>
                    </exec>
                    <exec executable="chmod">
                        <arg line="755 ${loc.NPM_BINARIES_HOME}/.bin/grunt"/>
                    </exec>
                    <exec executable="chmod">
                        <arg line="755 ${loc.NODE_HOME}/bin/node"/>
                    </exec>
                    <exec executable="chmod">
                        <arg line="-R a+x ${loc.NPM_HOME}/node_modules/protractor"/>
                    </exec>
                    <exec executable="chmod">
                        <arg line="-R a+x ${loc.NPM_HOME}/node_modules/protractor/selenium/chromedriver/chromedriver"/>
                    </exec>
                    <property name="npmPermissionsReset" value="true"/>
                </then>
            </if>
        </sequential>
    </macrodef>

    <macrodef name="gruntBuild">
        <attribute name="path" default="NOT SET"/>
        <attribute name="phase" default="NOT SET"/>

        <sequential>
            <echo message="START of calling grunt @{phase} on @{path}"/>
            <property environment="env"/>

            <detectOS/>
            <property file="${ext.npmancillary.path}/resources/ant/${os.family}.properties" />


            <if>
                <equals arg1="${phase}" arg2="clean"/>
                <then>
                    <removeLink path="@{path}${file.separator}node_modules" />
                </then>
            </if>

            <createNodeModulesSymlink path="@{path}"/>
            <cleanGruntBuildSymlinks/>
            <resetNpmPermissions/>

            <if>
                <os family="windows"/>
                <then>
                    <echo message="Running grunt @{phase}"/>
                    <exec dir="@{path}" executable="${loc.NPM_BINARIES_HOME}\.bin\grunt.cmd" failonerror="true">
                        <env key="Path" value="${env.Path}${path.separator}${loc.EXTRA_PATH}"/>
                        <env key="NPM_HOME" value="${loc.NPM_HOME}"/>
                        <env key="NPM_BINARIES_HOME" value="${loc.NPM_BINARIES_HOME}"/>
                        <env key="NODE_HOME" value="${loc.NODE_HOME}"/>

                        <arg value="@{phase}"/>
                    </exec>
                </then>
                <else>
                    <echo message="Running grunt @{phase}"/>
                    <exec dir="@{path}" executable="${loc.NPM_BINARIES_HOME}/.bin/grunt" failonerror="true">
                        <env key="PATH" value="${loc.EXTRA_PATH}${path.separator}${env.PATH}"/>
                        <env key="NPM_HOME" value="${loc.NPM_HOME}"/>
                        <env key="NPM_BINARIES_HOME" value="${loc.NPM_BINARIES_HOME}"/>
                        <env key="NODE_HOME" value="${loc.NODE_HOME}"/>

                        <arg value="@{phase}"/>
                    </exec>
                </else>
            </if>
            <echo message="END of calling grunt @{phase}"/>
        </sequential>
    </macrodef>


</project>
